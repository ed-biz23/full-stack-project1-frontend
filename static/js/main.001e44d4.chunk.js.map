{"version":3,"sources":["images/books.png","components/NavigationBar.js","components/Jumbotron.js","pages/Home.js","Store.js","views/CampusCardView.js","components/AddCampus.js","pages/Campuses.js","components/AddStudent.js","pages/Students.js","pages/EditCampus.js","pages/ShowCampus.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavigationBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","Navbar","fixed","expand","react_router_dom","to","concat","process","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","Component","Jumbotron","mainText","subText","slogan","href","Home","components_Jumbotron","Store","createContext","initialState","campusesData","studentsData","reducer","action","type","objectSpread","payload","toConsumableArray","CampusCardView","_ref","campus","dispatch","useContext","fetchCampusesDataAction","_ref2","asyncToGenerator","regenerator_default","mark","_callee","data","dataJSON","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","arguments","fetchDeleteCampus","_ref3","_callee2","id","_context2","method","setTimeout","_x","Col","sm","Card","style","background","color","marginTop","minHeight","CardImg","top","width","src","imageUrl","alt","CardBody","pathname","CardText","textDecoration","name","toUpperCase","undefined","students","length","Button","size","AddCampus","fetchPostNewCampusAction","headers","Accept","Content-Type","body","JSON","stringify","modal","prevState","_this2","outline","Modal","textAlign","ModalBody","Input","ModalFooter","justifyContent","document","getElementById","value","React","Campuses","_useContext","paddingTop","paddingBottom","react","components_AddCampus","Row","xs","fontSize","fontWeight","map","views_CampusCardView","key","AddStudent","placeholder","handleStudentName","Students","_useState","useState","_useState2","slicedToArray","setStudents","newName","Container","components_AddStudent","margin","CardTitle","CardSubtitle","Fragment","EditCampus","location","setName","_useState3","address","_useState4","setAddress","_useState5","_useState6","setImageUrl","_useState7","description","_useState8","setDescription","Form","FormGroup","row","Label","for","onChange","e","target","check","preventDefault","fetchUpdateCampus","history","push","offset","bsSize","ShowCampus","setCampus","fetchCampusId","_callee3","_context3","useEffect","md","height","App","fetchStudentsDataAction","basename","components_NavigationBar","react_router","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","_useReducer","useReducer","_useReducer2","Provider","children","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.001e44d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/books.f44453ff.png\";","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Collapse, Navbar, NavbarToggler, Nav, NavItem } from \"reactstrap\";\nimport \"../css/NavigationBar.css\";\n\nclass NavigationBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Navbar fixed=\"top\" expand=\"md\">\n          <Link to={`${process.env.PUBLIC_URL}/`}>Home</Link>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <Link to={`${process.env.PUBLIC_URL}/campuses`}>Campuses</Link>\n              </NavItem>\n              <NavItem>\n                <Link to={`${process.env.PUBLIC_URL}/students`}>Students</Link>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default NavigationBar;\n","import React from 'react';\nimport '../css/Jumbotron.css';\n\nconst Jumbotron = (props) => {\n    return(\n        <div className=\"jumbotron\">\n            <h1 className='title'>WELCOME TO</h1>\n            <h1 className='title'>{props.mainText}</h1>\n            <p>{props.subText}</p>\n            <h3>{props.slogan}</h3>\n            <button>\n                <a href=\"https://github.com/eviled23/full-stack-project1-frontend/commits/master\"> Learn More </a>\n            </button>\n        </div>\n    )\n}\n\nexport default Jumbotron;","import React from \"react\";\nimport '../css/Home.css';\nimport logo from  '../images/books.png';\n\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst Home = () => {\n  return (\n    <div className='welcome-container'>\n      {/* <img src={logo} alt=\"Logo\" /> */}\n      <Jumbotron \n        mainText='A Platform for Managing Students and Campuses'\n        subText=\"a RESTful full-stack web application to manage students\n                and campuses.\"\n        slogan=\"Simple Solutions to Complicated Problems\"\n      />  \n  </div>\n  )\n};\n\nexport default Home;\n","import React, { createContext, useReducer } from \"react\";\n\nexport const Store = createContext();\n\nconst initialState = {\n  campusesData: [],\n  studentsData: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_CAMPUSES_DATA\":\n      return { ...state, campusesData: action.payload };\n    case \"FETCH_STUDENTS_DATA\":\n      return { ...state, studentsData: action.payload };\n    case \"ADD_CAMPUS_DATA\":\n      return {\n        ...state,\n        campusesData: [...state.campusesData, action.payload]\n      };\n    // case \"DELETE_CAMPUS_DATA\":\n    //   return {\n    //     ...state,\n    //     campusesData: [\n    //       ...state.campusesData.slice(0, action.payload),\n    //       ...state.campusesData.slice(action.payload + 1)\n    //     ]\n    //   };\n    // case \"UPDATE_CAMPUS_DATA\":\n    //   return {\n    //     ...state,\n    //     campusesData: [\n    //       ...state.campusesData.slice(0, action.payload.index),\n    //       action.payload.updatedCampusData,\n    //       ...state.campusesData.slice(action.payload.index + 1)\n    //     ]\n    //   };\n    default:\n      return state;\n  }\n};\n\nexport const StoreProvider = props => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = { state, dispatch };\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\n};\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Card, CardImg, CardBody, CardText, Button } from \"reactstrap\";\n\nimport { Store } from \"../Store\";\n\nconst CampusCardView = ({ campus }) => {\n  const { dispatch } = useContext(Store);\n\n  const fetchCampusesDataAction = async () => {\n    const data = await fetch(\n      \"https://secret-waters-79188.herokuapp.com/api/campuses\"\n    );\n    const dataJSON = await data.json();\n    return dispatch({\n      type: \"FETCH_CAMPUSES_DATA\",\n      payload: dataJSON\n    });\n  };\n\n  const fetchDeleteCampus = async id => {\n    await fetch(\n      \"https://secret-waters-79188.herokuapp.com/api/campuses/\" + id,\n      {\n        method: \"DELETE\"\n      }\n    );\n    setTimeout(() => {\n      fetchCampusesDataAction();\n    }, 500);\n  };\n\n  return (\n    <Col sm=\"3\">\n      <Card\n        style={{\n          background: \"white\",\n          color: \"grey\",\n          marginTop: \"0.75rem\",\n          minHeight: \"24rem\"\n        }}\n      >\n        <CardImg top width=\"100%\" src={campus.imageUrl} alt=\"placeholder\" />\n        <CardBody>\n          <Link\n            to={{\n              pathname: \"/campuses/show-campus\",\n              state: { id: campus.id }\n            }}\n          >\n            <CardText\n              style={{\n                color: \"grey\",\n                textDecoration: \"underline\"\n              }}\n            >\n              {campus.name.toUpperCase()}\n            </CardText>\n          </Link>\n          <CardText>\n            {campus.students === undefined ? 0 : campus.students.length}{\" \"}\n            Students\n          </CardText>\n          <Link\n            to={{\n              pathname: \"/campuses/edit-campus\",\n              state: { campus: campus }\n            }}\n          >\n            <Button color=\"primary\" size=\"xs\">\n              Edit\n            </Button>\n          </Link>\n          {\"                    \"}\n          <Button\n            color=\"danger\"\n            size=\"xs\"\n            onClick={() => {\n              fetchDeleteCampus(campus.id);\n            }}\n          >\n            Delete\n          </Button>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nexport default CampusCardView;\n","import React from \"react\";\nimport { Button, Modal, ModalBody, ModalFooter, Input } from \"reactstrap\";\n\nclass AddCampus extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  fetchPostNewCampusAction = async name => {\n    const data = await fetch(\n      \"https://secret-waters-79188.herokuapp.com/api/campuses\",\n      {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: name.toUpperCase()\n        })\n      }\n    );\n    const dataJSON = await data.json();\n    return this.props.dispatch({\n      type: \"ADD_CAMPUS_DATA\",\n      payload: dataJSON\n    });\n  };\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    return (\n      <div>\n        <Button outline color=\"primary\" onClick={this.toggle}>\n          Add Campus\n        </Button>\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          className={this.props.className}\n          style={{ textAlign: \"center\" }}\n        >\n          <ModalBody>\n            <h1>Campus Name</h1>\n            <Input id=\"add-campus\" />\n          </ModalBody>\n          <ModalFooter style={{ justifyContent: \"center\" }}>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                this.toggle();\n                if (document.getElementById(\"add-campus\").value !== \"\") {\n                  this.fetchPostNewCampusAction(\n                    document.getElementById(\"add-campus\").value\n                  );\n                }\n              }}\n            >\n              Add Campus\n            </Button>{\" \"}\n            <Button color=\"secondary\" onClick={this.toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default AddCampus;\n","import React, { Fragment, useContext } from \"react\";\nimport { Row, Col } from \"reactstrap\";\n\nimport { Store } from \"../Store\";\n\nimport CampusCardView from \"../views/CampusCardView\";\nimport AddCampus from \"../components/AddCampus\";\n\nconst Campuses = () => {\n  const { state, dispatch } = useContext(Store);\n\n  const emptyDataLayout = () => {\n    return (\n      <Fragment>\n        <h1>All Campuses</h1>\n        <p style={{ color: \"grey\" }}>\n          There are no campuses registered in the database\n        </p>\n        <AddCampus dispatch={dispatch} />\n      </Fragment>\n    );\n  };\n\n  const dataLayout = () => {\n    return (\n      <Row>\n        <Col xs=\"6\" style={{ fontSize: \"1.5rem\", fontWeight: \"bold\" }}>\n          All Campuses\n        </Col>\n        <Col xs=\"6\">\n          <AddCampus dispatch={dispatch} />\n        </Col>\n        {state.campusesData.map(campus => (\n          <CampusCardView key={campus.id} campus={campus} />\n        ))}\n      </Row>\n    );\n  };\n\n  return (\n    <div style={{ paddingTop: \"5rem\", paddingBottom: \"5rem\" }}>\n      {state.campusesData.length === 0 ? emptyDataLayout() : dataLayout()}\n    </div>\n  );\n};\n\nexport default Campuses;\n","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input } from 'reactstrap';\n\nclass AddStudent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    return (\n      <div>\n        <Button outline color=\"primary\" onClick={this.toggle}>\n            Add Student\n        </Button>\n        <Modal  isOpen={this.state.modal}\n                toggle={this.toggle}\n                className={this.props.className}>\n            <ModalBody>\n             <h1>Student Info</h1>\n             <Input id=\"student-name\" placeholder=\"student name\" />\n             {/* <Input id=\"student-id\" placeholder=\"student id\" /> */}\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"primary\"\n                        onClick={() => {\n                            this.toggle();\n                            this.props.handleStudentName(\n                                document.getElementById(\"student-name\").value\n                            );\n                            // this.props.handleStudentId(\n                            //     document.getElementById(\"student-id\").value\n                            // );\n                        }}>\n                    Add Student\n                </Button>{' '}\n                <Button color=\"secondary\"\n                        onClick={this.toggle}>\n                    Cancel\n                </Button>\n            </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default AddStudent;","import React, { useState, useEffect } from \"react\";\n\nimport {Container, Row, Col } from \"reactstrap\";\n\nimport { Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button } from 'reactstrap';\n\nimport AddStudent from '../components/AddStudent';\nconst Students = () => {\n  const [students, setStudents] = useState([\n    // {\n    //   name: 'Ba'\n    //   // ID : '111111'\n    // },\n    // {\n    //   name: 'Edward'\n    //   // ID : '222222'\n    // },\n    // {\n    //   name: 'Jhony'\n    //   // ID : '333333'\n    // }\n  ]);\n  // const [studentId, setStudentId] = useState('');\n\n  const handleStudentName = name => {\n    const newName = [...students, {name}];\n    setStudents(newName);\n  };\n  // const handleStudentId = id => {\n  //   setStudentId(id);\n  // }\n\n  const emptyStudentDataLayout = () => {\n    return (\n      <React.Fragment>\n        <h1>All Students</h1>\n        <p>There are no students registered in the database</p>  \n        <AddStudent\n        handleStudentName={handleStudentName}\n        // handleStudentId={handleStudentId}\n        />\n      </React.Fragment>\n    );\n  };\n\n  const studentDataLayout = () => {\n    return (\n      <Container>\n        <Row>\n          <Col xs=\"6\" style={{ fontSize: \"1.5rem\", fontWeight: \"bold\" }}>\n            All Student\n          </Col>\n          <Col xs=\"6\">\n            <AddStudent\n            handleStudentName={handleStudentName}\n            // handleStudentId={handleStudentId}\n            />\n          </Col>\n          {/* {students.map(name => (\n          <h1>{name.name}</h1>\n        ))} */}\n          \n        </Row>\n          \n          <Row>\n          {students.map( (name) => {\n            return(\n               <div>\n               <Card\n               style={{color: \"grey\", margin: \"0.2rem 0.2rem\"}}>\n                 <CardImg top width=\"100%\" src=\"https://apprecs.org/ios/images/app-icons/256/b0/1156908976.jpg\" alt={students.name} />\n                 <CardBody>\n                   <CardTitle>Name: {name.name}</CardTitle>\n                   <CardSubtitle>ID: Student Empl ID</CardSubtitle>                   \n                   <CardText>Campus: Campus Name.</CardText>\n                 </CardBody>\n               </Card>\n               </div>\n              )          \n            })} \n          </Row>  \n       </Container>\n      \n    );\n  };\n\n\n  return (\n    <div style={{ paddingTop: \"5rem\" }}>\n      {!students || students.length === 0 ? emptyStudentDataLayout() : studentDataLayout()}\n    </div>\n  );\n  \n};\n\nexport default Students;\n","import React, { useState, useContext } from \"react\";\nimport { Col, Button, Form, FormGroup, Label, Input } from \"reactstrap\";\n\nimport { Store } from \"../Store\";\n\nconst EditCampus = props => {\n  const { dispatch } = useContext(Store);\n  const { campus } = props.location.state;\n  const [name, setName] = useState(campus.name);\n  const [address, setAddress] = useState(campus.address);\n  const [imageUrl, setImageUrl] = useState(campus.imageUrl);\n  const [description, setDescription] = useState(campus.description);\n\n  const fetchCampusesDataAction = async () => {\n    const data = await fetch(\n      \"https://secret-waters-79188.herokuapp.com/api/campuses\"\n    );\n    const dataJSON = await data.json();\n    return dispatch({\n      type: \"FETCH_CAMPUSES_DATA\",\n      payload: dataJSON\n    });\n  };\n\n  return (\n    <Form\n      style={{\n        paddingTop: \"5rem\",\n        paddingBottom: \"5rem\",\n        fontWeight: \"bold\",\n        color: \"grey\"\n      }}\n    >\n      <FormGroup row>\n        <Label for=\"campusName\" sm={2}>\n          Campus Name\n        </Label>\n        <Col sm={10}>\n          <Input\n            type=\"text\"\n            name=\"campusName\"\n            id=\"campusName\"\n            placeholder=\"campus name\"\n            value={name !== null ? name : \"\"}\n            onChange={e => {\n              setName(e.target.value);\n            }}\n          />\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Label for=\"campusLocation\" sm={2}>\n          Campus Location\n        </Label>\n        <Col sm={10}>\n          <Input\n            type=\"text\"\n            name=\"campusLocation\"\n            id=\"campusLocation\"\n            placeholder=\"campus location\"\n            value={address !== null ? address : \"\"}\n            onChange={e => {\n              setAddress(e.target.value);\n            }}\n          />\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Label for=\"campusImageUrl\" sm={2}>\n          Campus Image URL\n        </Label>\n        <Col sm={10}>\n          <Input\n            type=\"text\"\n            name=\"campusImageUrl\"\n            id=\"campusImageUrl\"\n            placeholder=\"campus image url\"\n            value={imageUrl !== null ? imageUrl : \"\"}\n            onChange={e => {\n              setImageUrl(e.target.value);\n            }}\n          />\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Label for=\"campusDescription\" sm={2}>\n          Campus Description\n        </Label>\n        <Col sm={10}>\n          <Input\n            type=\"textarea\"\n            name=\"campusDescription\"\n            id=\"campusDescription\"\n            value={description !== null ? description : \"\"}\n            onChange={e => {\n              setDescription(e.target.value);\n            }}\n          />\n        </Col>\n      </FormGroup>\n      <FormGroup check row>\n        <Col xs=\"auto\">\n          <Button\n            color=\"primary\"\n            onClick={e => {\n              e.preventDefault();\n              const fetchUpdateCampus = async () => {\n                await fetch(\n                  \"https://secret-waters-79188.herokuapp.com/api/campuses/\" +\n                    campus.id,\n                  {\n                    method: \"PUT\",\n                    headers: {\n                      Accept: \"application/json\",\n                      \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                      name,\n                      imageUrl,\n                      address,\n                      description\n                    })\n                  }\n                );\n              };\n              fetchUpdateCampus();\n              setTimeout(() => {\n                fetchCampusesDataAction();\n                props.history.push(`${process.env.PUBLIC_URL}/campuses`);\n              }, 500);\n            }}\n          >\n            Save Changes\n          </Button>\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Col>\n          <h1>Students on Campus</h1>\n        </Col>\n      </FormGroup>\n      <FormGroup row style={{ justifyContent: \"center\" }}>\n        <Col xs=\"6\" sm=\"4\" offset=\"1\">\n          <Input\n            type=\"select\"\n            name=\"selectStudent\"\n            id=\"selectStudent\"\n            bsSize=\"default\"\n          >\n            <option>select student...</option>\n          </Input>\n        </Col>\n        <Col xs=\"auto\">\n          <Button outline color=\"primary\">\n            Add to Campus\n          </Button>\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Col>There are no students currently registered to this campus.</Col>\n      </FormGroup>\n    </Form>\n  );\n};\n\nexport default EditCampus;\n","import React, { Fragment, useContext, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Button } from \"reactstrap\";\n\nimport { Store } from \"../Store\";\n\nconst ShowCampus = props => {\n  const { dispatch } = useContext(Store);\n  const { id } = props.location.state;\n  const [campus, setCampus] = useState(\"\");\n\n  const fetchCampusId = async () => {\n    const data = await fetch(\n      \"https://secret-waters-79188.herokuapp.com/api/campuses/\" + id\n    );\n    const dataJSON = await data.json();\n    setCampus(dataJSON);\n  };\n\n  const fetchCampusesDataAction = async () => {\n    const data = await fetch(\n      \"https://secret-waters-79188.herokuapp.com/api/campuses\"\n    );\n    const dataJSON = await data.json();\n    return dispatch({\n      type: \"FETCH_CAMPUSES_DATA\",\n      payload: dataJSON\n    });\n  };\n\n  const fetchDeleteCampus = async id => {\n    await fetch(\n      \"https://secret-waters-79188.herokuapp.com/api/campuses/\" + id,\n      {\n        method: \"DELETE\"\n      }\n    );\n    setTimeout(() => {\n      fetchCampusesDataAction();\n    }, 500);\n  };\n\n  useEffect(() => {\n    fetchCampusId();\n  }, []);\n\n  const noStudentsLayout = () => {\n    return (\n      <Fragment>\n        <div style={{ color: \"grey\", paddingTop: \"1rem\" }}>\n          <h1 style={{ textAlign: \"left\" }}>Students on Campus</h1>\n          <p style={{ color: \"grey\" }}>\n            There are no students currently registered to this campus\n          </p>\n          <Button outline color=\"primary\">\n            Add Students\n          </Button>\n        </div>\n      </Fragment>\n    );\n  };\n\n  return (\n    <div style={{ paddingTop: \"5rem\", paddingBottom: \"5rem\" }}>\n      <Row>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <img\n            src={campus.imageUrl}\n            alt={campus.name}\n            style={{ height: \"100%\", width: \"100%\" }}\n          />\n        </Col>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <h1>{campus.name}</h1>\n          <p>{campus.description}</p>\n        </Col>\n        <Col xs=\"6\" style={{ paddingTop: \"1rem\" }}>\n          <p style={{ color: \"black\" }}>Location: {campus.address}</p>\n        </Col>\n        <Col xs=\"6\" style={{ paddingTop: \"1rem\" }}>\n          <Link\n            to={{\n              pathname: `${process.env.PUBLIC_URL}/edit-campus`,\n              state: { campus: campus }\n            }}\n          >\n            <Button color=\"primary\" size=\"xs\">\n              Edit\n            </Button>\n          </Link>\n          {\"                    \"}\n          <Button\n            color=\"danger\"\n            size=\"xs\"\n            onClick={() => {\n              fetchDeleteCampus(campus.id);\n            }}\n          >\n            Delete\n          </Button>\n        </Col>\n      </Row>\n      {noStudentsLayout()}\n    </div>\n  );\n};\n\nexport default ShowCampus;\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport { Container } from \"reactstrap\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport \"./css/App.css\";\n\nimport NavigationBar from \"./components/NavigationBar\";\n\nimport Home from \"./pages/Home\";\nimport Campuses from \"./pages/Campuses\";\nimport Students from \"./pages/Students\";\nimport EditCampus from \"./pages/EditCampus\";\nimport ShowCampus from \"./pages/ShowCampus\";\n\nimport { Store } from \"./Store\";\n\nfunction App() {\n  const { state, dispatch } = useContext(Store);\n\n  const fetchCampusesDataAction = async () => {\n    const data = await fetch(\n      \"https://secret-waters-79188.herokuapp.com/api/campuses\"\n    );\n    const dataJSON = await data.json();\n    return dispatch({\n      type: \"FETCH_CAMPUSES_DATA\",\n      payload: dataJSON\n    });\n  };\n\n  const fetchStudentsDataAction = async () => {\n    const data = await fetch(\n      \"https://secret-waters-79188.herokuapp.com/api/students\"\n    );\n    const dataJSON = await data.json();\n    return dispatch({\n      type: \"FETCH_STUDENTS_DATA\",\n      payload: dataJSON\n    });\n  };\n\n  useEffect(() => {\n    state.campusesData.length === 0 && fetchCampusesDataAction();\n    state.studentsData.length === 0 && fetchStudentsDataAction();\n  }, []);\n\n  return (\n    <Fragment>\n      <Router basename={\"/subdirectory\"}>\n        <NavigationBar />\n        <div className=\"App\">\n          <Container>\n            <Switch>\n              <Route\n                exact\n                path={`${process.env.PUBLIC_URL}/`}\n                component={Home}\n              />\n              <Route\n                exact\n                path={`${process.env.PUBLIC_URL}/campuses`}\n                component={Campuses}\n              />\n              <Route\n                path={`${process.env.PUBLIC_URL}/students`}\n                component={Students}\n              />\n              {state.campusesData.length !== 0 ? (\n                <Fragment>\n                  <Route\n                    path={`${process.env.PUBLIC_URL}/edit-campus`}\n                    component={EditCampus}\n                  />\n                  <Route\n                    path={`${process.env.PUBLIC_URL}/show-campus`}\n                    component={ShowCampus}\n                  />\n                </Fragment>\n              ) : (\n                <Redirect to={`${process.env.PUBLIC_URL}/campuses`} />\n              )}\n            </Switch>\n          </Container>\n        </div>\n      </Router>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { StoreProvider } from \"./Store\";\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}